"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _events = require("../../const/events");
var _isEqual = _interopRequireDefault(require("../functions/isEqual"));
var _EventBus = _interopRequireDefault(require("./Event-Bus"));
var Block = /*#__PURE__*/(function () {
  /** JSDoc
  * @param {string} tagName
  * @param {Object} props
  *
  * @returns {void}
  */
  function Block(props) {
    var _this = this;
    (0, _classCallCheck2["default"])(this, Block);
    this.setProps = function (nextProps) {
      if (!nextProps) {
        return;
      }
      Object.assign(_this.props, nextProps);
    };
    var eventBus = new _EventBus["default"]();
    this.props = this.makePropsProxy(props);
    this._element = null;
    if (this.props.handler !== undefined) this.handler = this.props.handler;
    this.eventBus = eventBus;
    this.registerEvents(eventBus);
    eventBus.emit(_events.EVENTS.INIT);
  }
  (0, _createClass2["default"])(Block, [{
    key: "registerEvents",
    value: function registerEvents(eventBus) {
      eventBus.on(_events.EVENTS.INIT, this.init.bind(this));
      eventBus.on(_events.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));
      eventBus.on(_events.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));
      eventBus.on(_events.EVENTS.FLOW_CWU, this._componentWillUnmount.bind(this));
      eventBus.on(_events.EVENTS.FLOW_RENDER, this._render.bind(this));
      if (this.handler !== undefined) eventBus.on(_events.EVENTS.FLOW_HANDLER, this.handler.bind(this));
    }
  }, {
    key: "createResources",
    value: function createResources() {
      var _this2 = this;
      var _this$props = this.props, tagNameBlock = _this$props.tagNameBlock, classListBlock = _this$props.classListBlock, tabIndex = _this$props.tabIndex;
      this._element = this.createDocumentElement(tagNameBlock);
      if (classListBlock) classListBlock.forEach(function (item) {
        if (_this2._element !== null) _this2._element.classList.add(item);
      });
      if (tabIndex) this._element.tabIndex = tabIndex;
    }
  }, {
    key: "destroyResources",
    value: function destroyResources() {
      this._componentWillUnmount();
      if (this._element !== null) {
        if (this._element.parentNode !== null) this._element.parentNode.removeChild(this._element);
      }
    }
  }, {
    key: "init",
    value: function init() {
      this.createResources();
      this.eventBus.emit(_events.EVENTS.FLOW_CDM);
    }
  }, {
    key: "_componentDidMount",
    value: function _componentDidMount() {
      this._render();
      this.componentDidMount({});
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount(oldProps) {
      return oldProps;
    }
  }, {
    key: "_componentDidUpdate",
    value: function _componentDidUpdate(oldProps, newProps) {
      var response = this.componentDidUpdate(oldProps, newProps);
      if (response) this._render();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(oldProps, newProps) {
      return (0, _isEqual["default"])(oldProps, newProps);
    }
  }, {
    key: "_componentWillUnmount",
    value: function _componentWillUnmount() {
      this.eventBus.off(_events.EVENTS.INIT, this.init.bind(this));
      this.eventBus.off(_events.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));
      this.eventBus.off(_events.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));
      this.eventBus.off(_events.EVENTS.FLOW_CWU, this._componentWillUnmount.bind(this));
      this.eventBus.off(_events.EVENTS.FLOW_RENDER, this._render.bind(this));
      if (this.handler !== undefined) this.eventBus.off(_events.EVENTS.FLOW_HANDLER, this.handler.bind(this));
    }
  }, {
    key: "element",
    get: function get() {
      return this._element;
    }
  }, {
    key: "_render",
    value: function _render() {
      var block = this.render();
      if (this._element !== null) this._element.innerHTML = block;
    }
  }, {
    key: "render",
    value: function render() {
      return "";
    }
  }, {
    key: "getContent",
    value: function getContent() {
      return this.element;
    }
  }, {
    key: "makePropsProxy",
    value: function makePropsProxy(props) {
      var self = this;
      var proxyProps = new Proxy(props, {
        get: function get(props, prop) {
          return props[prop];
        },
        set: function set(props, prop, val) {
          var oldProps = {};
          Object.assign(oldProps, props);
          props[prop] = val;
          self.eventBus.emit(_events.EVENTS.FLOW_CDU, oldProps, props);
          return true;
        },
        deleteProperty: function deleteProperty() {
          throw new Error("Нет доступа");
        }
      });
      return proxyProps;
    }
  }, {
    key: "createDocumentElement",
    value: function createDocumentElement(tagName) {
      return document.createElement(tagName);
    }
  }, {
    key: "show",
    value: function show() {
      if (this._element !== null) {
        var displayBlock = this.props.displayBlock;
        displayBlock ? this._element.style.display = displayBlock : this._element.style.display = "block";
      }
      if (this.handler !== undefined) this.eventBus.emit(_events.EVENTS.FLOW_HANDLER);
    }
  }, {
    key: "hide",
    value: function hide() {
      var destroy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      if (this._element !== null) this._element.style.display = "none";
      if (destroy) this.destroyResources();
    }
  }]);
  return Block;
})();
exports["default"] = Block;
