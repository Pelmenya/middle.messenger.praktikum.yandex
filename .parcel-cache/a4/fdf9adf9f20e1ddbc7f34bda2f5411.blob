"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = handlerAddUserSubmit;
var _errorsServer = require("../../../../const/errorsServer");
var _ChatsAPI = require("../../../api/ChatsAPI");
var _UsersAPI = require("../../../api/UsersAPI");
var _storeObj = require("../../../store/storeObj");
var _getDataFromStrore = _interopRequireDefault(require("../../getDataFromStrore"));
var _getElementFromStore = _interopRequireDefault(require("../../getElementFromStore"));
function handlerAddUserSubmit(options) {
  return _UsersAPI.usersAPI.searchUser(options).then(function (data) {
    if (data.status >= 200 && data.status <= 299) {
      var res = JSON.parse(data.response);
      if (res.length > 0) {
        var addUserPopupElement = (0, _getElementFromStore["default"])(_storeObj.store, "chatsProps", "add_user");
        var currentChatId = (0, _getDataFromStrore["default"])("chatsSelectedProps").block.props.chatId;
        if (currentChatId !== 0) {
          var formData = {
            data: {
              users: [res[0].id],
              chatId: currentChatId
            }
          };
          _ChatsAPI.chatsAPI.addUserToChat(formData).then(function (data) {
            if (data.status >= 200 && data.status <= 299) {
              if (addUserPopupElement !== null) addUserPopupElement.hide();
            } else return _errorsServer.ERRORS_SERVER.ERROR_ADD_USER;
          })["catch"](function (err) {
            return alert(err);
          });
        }
      } else return _errorsServer.ERRORS_SERVER.ERROR_SEARCH_USER;
    } else {
      var obj = JSON.parse(data.response);
      return obj.reason;
    }
  })["catch"](function (err) {
    return alert(err);
  });
}
