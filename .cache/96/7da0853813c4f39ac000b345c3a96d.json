{"id":"dist/src/utils/functions/isEqual.js","dependencies":[{"name":"C:\\Users\\Dimon\\Desktop\\middle.messenger.praktikum.yandex\\static\\dist\\src\\utils\\functions\\isEqual.js.map","includedInParent":true,"mtime":1625023378921},{"name":"C:\\Users\\Dimon\\Desktop\\middle.messenger.praktikum.yandex\\static\\src\\utils\\functions\\isEqual.ts","includedInParent":true,"mtime":1624713275255},{"name":"C:\\Users\\Dimon\\Desktop\\middle.messenger.praktikum.yandex\\package.json","includedInParent":true,"mtime":1625025472659},{"name":"./isArrayOrObject","loc":{"line":1,"column":28},"parent":"C:\\Users\\Dimon\\Desktop\\middle.messenger.praktikum.yandex\\static\\dist\\src\\utils\\functions\\isEqual.js","resolved":"C:\\Users\\Dimon\\Desktop\\middle.messenger.praktikum.yandex\\static\\dist\\src\\utils\\functions\\isArrayOrObject.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEqual;\n\nvar _isArrayOrObject = _interopRequireDefault(require(\"./isArrayOrObject\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction isEqual(lhs, rhs) {\n  // Сравнение количества ключей объектов и массивов\n  if (Object.keys(lhs).length !== Object.keys(rhs).length) {\n    return false;\n  }\n\n  for (var _i = 0, _Object$entries = Object.entries(lhs); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    var rightValue = rhs[key];\n\n    if ((0, _isArrayOrObject.default)(value) && (0, _isArrayOrObject.default)(rightValue)) {\n      // Здесь value и rightValue может быть только массивом или объектом\n      // И TypeScript это обрабатывает\n      if (isEqual(value, rightValue)) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (value !== rightValue) {\n      return false;\n    }\n  }\n\n  return true;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":24,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":24,"column":9}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":24,"column":16}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":32},"generated":{"line":24,"column":17}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":24,"column":20}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":50},"generated":{"line":24,"column":22}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":24,"column":25}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":4,"column":66},"generated":{"line":24,"column":27}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":5,"column":2},"generated":{"line":25,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":26,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":26,"column":6}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":12},"generated":{"line":26,"column":12}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":26,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":26,"column":17}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":26,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":26,"column":21}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":23},"generated":{"line":26,"column":23}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":26,"column":29}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":34},"generated":{"line":26,"column":34}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":40},"generated":{"line":26,"column":40}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":26,"column":41}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":34},"generated":{"line":26,"column":45}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":46},"generated":{"line":26,"column":46}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":34},"generated":{"line":26,"column":49}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":51},"generated":{"line":26,"column":51}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":26,"column":57}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":6,"column":59},"generated":{"line":26,"column":59}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":27,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":27,"column":11}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":27,"column":16}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":8,"column":3},"generated":{"line":28,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":30,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":7},"generated":{"line":30,"column":37}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":30,"column":43}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":30,"column":44}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":7},"generated":{"line":30,"column":51}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":22},"generated":{"line":30,"column":52}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":7},"generated":{"line":30,"column":55}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":30,"column":56}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":13,"column":28},"generated":{"line":30,"column":93}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":31,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":32,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":32,"column":8}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":32,"column":11}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":33,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":33,"column":8}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":33,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":35,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":10},"generated":{"line":35,"column":8}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":35,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":23},"generated":{"line":35,"column":21}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":26},"generated":{"line":35,"column":24}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":35,"column":25}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":26},"generated":{"line":35,"column":28}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":35,"column":29}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":37,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":37,"column":8}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":24},"generated":{"line":37,"column":38}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":37,"column":43}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":34},"generated":{"line":37,"column":48}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":50},"generated":{"line":37,"column":78}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":34},"generated":{"line":37,"column":88}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":37,"column":89}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":15,"column":63},"generated":{"line":37,"column":91}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":38,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":17,"column":6},"generated":{"line":39,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":40,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":40,"column":10}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":40,"column":17}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":40,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":40,"column":23}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":40,"column":25}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":40,"column":35}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":40,"column":36}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":18,"column":68},"generated":{"line":40,"column":38}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":41,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":20,"column":7},"generated":{"line":42,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":44,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":44,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":44,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":22,"column":5},"generated":{"line":45,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":47,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":47,"column":8}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":47,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":18},"generated":{"line":47,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":47,"column":28}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":47,"column":30}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":48,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":48,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":48,"column":18}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":26,"column":5},"generated":{"line":49,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":27,"column":3},"generated":{"line":50,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":52,"column":0}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":29,"column":9},"generated":{"line":52,"column":9}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":52,"column":13}},{"source":"../../../../src/utils/functions/isEqual.ts","name":null,"original":{"line":30,"column":1},"generated":{"line":53,"column":0}}],"sources":{"../../../../src/utils/functions/isEqual.ts":"import { PlainObject } from \"../../types/PlainObject\";\r\nimport isArrayOrObject from \"./isArrayOrObject\";\r\n\r\nexport default function isEqual(lhs: PlainObject, rhs: PlainObject) {\r\n  // Сравнение количества ключей объектов и массивов\r\n  if (Object.keys(lhs).length !== Object.keys(rhs).length) {\r\n    return false;\r\n  }\r\n\r\n  for (const [\r\n    key,\r\n    value,\r\n  ] of Object.entries(lhs)) {\r\n    const rightValue = rhs[key];\r\n    if (isArrayOrObject(value) && isArrayOrObject(rightValue)) {\r\n      // Здесь value и rightValue может быть только массивом или объектом\r\n      // И TypeScript это обрабатывает\r\n      if (isEqual(value as PlainObject, rightValue as PlainObject)) {\r\n        continue;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (value !== rightValue) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"dc9028d70aa706f559f00222c0fcdaf1","cacheData":{"env":{}}}